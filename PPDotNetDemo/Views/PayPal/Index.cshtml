
@{
	Layout = null;
}
@using System.Configuration;

<!DOCTYPE html>

<html>
<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="~/Scripts/jquery-3.3.1.min.js"></script>
	<link href="~/Content/bootstrap.css" rel="stylesheet" id="bootstrap-css" />
	<script src="~/Scripts/bootstrap.min.js"></script>
	<style>
		#paypal-button-container > div:first-child {
			min-width: 10px;
		}

		.col-xs-6 {
			padding-top: 10px;
		}

		.btn.btn-link.btn-xs {
			padding-top: 8px;
		}
	</style>

	<title>PayPal ASP.Net MVC Demo</title>
</head>
<body>
	<div class="container">
		<div class="row">
			<div class="col-xs-12">
				<div class="panel panel-info">
					<div class="panel-heading">
						<div class="panel-title">
							<div class="row">
								<div class="col-xs-6">
									<h5><span class="glyphicon glyphicon-shopping-cart"></span> Shopping Cart</h5>
								</div>
								<div class="col-xs-6">
								</div>
							</div>
						</div>
					</div>
					<div class="panel-body">
						<div class="row">
							<div class="col-xs-2">
								<img class="img-responsive" src="https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png">
							</div>
							<div class="col-xs-4">
								<h4 class="product-name"><strong>PayPal Premier</strong></h4><h4><small>PayPal Premier Serivce Coupon</small></h4>
							</div>
							<div class="col-xs-6">
								<div class="col-xs-4 text-right">
									<h6><strong>2000.00</strong></h6>
								</div>
								<div class="col-xs-2">
									<h6><strong><span class="text-muted">x</span></strong></h6>
								</div>
								<div class="col-xs-4">
									<input type="number" min="0" step="1" pattern="\d*" class="form-control input-sm" value="1">
								</div>
								<div class="col-xs-2">
									<button type="button" class="btn btn-link btn-xs" disabled>
										<span class="glyphicon glyphicon-trash"> </span>
									</button>
								</div>
							</div>
						</div>
						<hr>
						<div class="row">
							<div class="col-xs-2">
								<img class="img-responsive" src="https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png">
							</div>
							<div class="col-xs-4">
								<h4 class="product-name"><strong>PayPal Professional</strong></h4><h4><small>PayPal Professional Serivce Coupon</small></h4>
							</div>
							<div class="col-xs-6">
								<div class="col-xs-4 text-right">
									<h6><strong>300.00</strong></h6>
								</div>
								<div class="col-xs-2">
									<h6><strong><span class="text-muted">x</span></strong></h6>
								</div>
								<div class="col-xs-4">
									<input type="number" min="0" step="1" pattern="\d*" class="form-control input-sm" value="1">
								</div>
								<div class="col-xs-2">
									<button type="button" class="btn btn-link btn-xs" disabled>
										<span class="glyphicon glyphicon-trash"> </span>
									</button>
								</div>
							</div>
						</div>
					</div>
					<div class="panel-footer">
						<div class="row text-center">
							<div class="col-xs-8">
								<h4 class="text-right">Total <strong>$</strong><strong id="totalAmount">0.00</strong></h4>
							</div>
							<div class="col-xs-4">
								<div id="paypal-button-container"></div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script src="https://www.paypal.com/sdk/js?client-id=@ConfigurationManager.AppSettings["PPClientId"]"></script>

	<script>

		$(document).ready(updateTotalAmount);

		// Set default currency
		var currency_code = 'USD';

		// Make sure the quantity is an integer while updating the product quantity.
		function quantityOnChange(e) {
			if (Number.isInteger(e.currentTarget.value) == false) {
				e.currentTarget.value = Math.round(e.currentTarget.value)
			}

			// Also updating the total amount
			updateTotalAmount();
		}
		$("input[type='number']").change(quantityOnChange);

		function updateTotalAmount() {
			var items = retrieveProductItems();

			if (items == null) {
				alert("Error occurs while retrieving product items");
				return;
			}

			var totalAmount = 0.00;
			try {
				for (var i = 0; i < items.length; i++) {
					totalAmount = totalAmount + parseFloat(items[i].unit_amount.value) * parseInt(items[i].quantity)
				}

				$("#totalAmount").text(totalAmount.toFixed(2));

			} catch (e) {
				alert("Error occurs while generating purchase units");
				return;
			}
		}

		// Retrieve info of each product, includes name, price and quantity, and return an array of products.
		function retrieveProductItems() {
			var pItems = $(".panel-body > .row");
			if (pItems.length == 0)
				return null;
			var productItems = [];
			for (let i = 0; i < pItems.length; i++) {
				let productName = $(pItems[i]).find(".col-xs-4 .product-name").text()
				let productPrice = $(pItems[i]).find(".col-xs-6 .col-xs-4.text-right h6").text();
				let productQuantity = $(pItems[i]).find(".col-xs-6 input[type='number']").val();
				productItems.push({
					name: productName,
					unit_amount: { value: productPrice, currency_code: currency_code },
					quantity: productQuantity
				});
			}
			return productItems;
		}

		// According to the products info, generate a purchase_units object.
		function generatePurchaseUnits() {
			var items = retrieveProductItems();

			if (items == null) {
				alert("Error occurs while retrieving product items");
				return;
			}

			var totalAmount = 0.00;
			var purchase_units = [];
			try {
				for (var i = 0; i < items.length; i++) {
					totalAmount = totalAmount + parseFloat(items[i].unit_amount.value) * parseInt(items[i].quantity)
				}
				purchase_units.push({
					amount: {
						currency_code: currency_code,
						value: totalAmount,
						breakdown: {
							item_total: { value: totalAmount, currency_code: currency_code }
						}
					},
					items: items
				});
			} catch (e) {
				alert("Error occurs while generating purchase units");
				return;
			}
			return purchase_units
		}

		// Actions on paypal checkout button.
		paypal.Buttons({
			createOrder: function (data, actions) {
				var purchaseUnits = generatePurchaseUnits();
				return actions.order.create({
					purchase_units: purchaseUnits
				});
			},
			onApprove: function (data, actions) {
				// Capture the funds from the transaction
				return actions.order.capture().then(function (details) {
					// Show a success message to your buyer
					location.href = `/PayPal/Success?orderID=${data.orderID}&givenName=${details.payer.name.given_name}&surName=${details.payer.name.surname}`;
				});
			}
		}).render('#paypal-button-container');
	</script>
</body>
</html>
